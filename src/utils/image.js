import fs from "fs";
import path from "path";
import sharp from "sharp";

/**
 * Generate summary image with country statistics
 * @param {Object} data - Data for image generation
 * @param {number} data.total - Total number of countries
 * @param {Array} data.top5 - Top 5 countries by GDP
 * @param {string} data.last_refreshed_at - Last refresh timestamp
 */
export async function generateSummaryImage({ total, top5, last_refreshed_at }) {
  try {
    // Ensure cache directory exists
    const cacheDir = path.resolve("cache");
    if (!fs.existsSync(cacheDir)) {
      fs.mkdirSync(cacheDir, { recursive: true });
    }

    // Image size
    const width = 1200;
    const height = 800;

    const formattedDate = last_refreshed_at
      ? new Date(last_refreshed_at).toUTCString()
      : "N/A";

    // Helper to escape XML
    const esc = (s) =>
      String(s)
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;");

    // Build top 5 lines
    let top5Lines = "";
    if (!top5 || top5.length === 0) {
      top5Lines = `<tspan x='50' dy='1.2em'>No GDP data available</tspan>`;
    } else {
      for (let i = 0; i < top5.length && i < 5; i++) {
        const country = top5[i];
        const rank = i + 1;
        const countryName = esc(country.name || "Unknown");
        const gdp = country.estimated_gdp || 0;
        const formattedGdp = Number(gdp).toLocaleString("en-US", {
          maximumFractionDigits: 2,
          minimumFractionDigits: 2,
        });
        const currencyCode = esc(country.currency_code || "N/A");
        const pop = (country.population || 0).toLocaleString();
        top5Lines += `<tspan x='50' dy='1.4em'>${rank}. ${countryName} — GDP: $${formattedGdp} (${currencyCode}) — Pop: ${pop}</tspan>`;
      }
    }

    const svg = `
      <svg width='${width}' height='${height}' xmlns='http://www.w3.org/2000/svg'>
        <rect width='100%' height='100%' fill='#ffffff' />
        <style>
          .title { font: 40px sans-serif; fill: #0f172a }
          .heading { font: 24px sans-serif; fill: #0b61d6 }
          .regular { font: 16px sans-serif; fill: #111827 }
        </style>
        <text x='50%' y='60' text-anchor='middle' class='title'>Country Summary Report</text>
        <text x='50' y='140' class='heading'>Total Countries: ${esc(
          total
        )}</text>
        <text x='50' y='175' class='regular'>Last Refreshed: ${esc(
          formattedDate
        )}</text>

        <text x='50' y='230' class='heading'>Top 5 Countries by Estimated GDP</text>
        <text x='50' y='270' class='regular'>${top5Lines}</text>

        <text x='50%' y='${
          height - 30
        }' text-anchor='middle' class='regular'>${esc(
      "Generated by Country Currency & Exchange API"
    )}</text>
      </svg>
    `;

    const outputPath = path.join(cacheDir, "summary.png");

    // Render SVG to PNG via sharp
    await sharp(Buffer.from(svg)).png().toFile(outputPath);

    console.log(`Image saved to: ${outputPath}`);
    return outputPath;
  } catch (error) {
    console.error("Error generating image:", error);
    throw error;
  }
}
